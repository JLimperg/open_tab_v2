//! `SeaORM` Entity. Generated by sea-orm-codegen 0.11.0-rc.2

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "tournament")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub uuid: Uuid,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::team::Entity")]
    Team,
    #[sea_orm(has_many = "super::tournament_log::Entity")]
    TournamentLog,
    #[sea_orm(has_many = "super::tournament_round::Entity")]
    TournamentRound,
}

impl Related<super::team::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Team.def()
    }
}

impl Related<super::tournament_log::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::TournamentLog.def()
    }
}

impl Related<super::tournament_round::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::TournamentRound.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
